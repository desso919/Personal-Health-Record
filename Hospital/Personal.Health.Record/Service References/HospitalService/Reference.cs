//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Personal.Health.Record.HospitalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/Hospital.Models")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirhtDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirhtDate {
            get {
                return this.BirhtDateField;
            }
            set {
                if ((this.BirhtDateField.Equals(value) != true)) {
                    this.BirhtDateField = value;
                    this.RaisePropertyChanged("BirhtDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondName {
            get {
                return this.SecondNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondNameField, value) != true)) {
                    this.SecondNameField = value;
                    this.RaisePropertyChanged("SecondName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HospitalModel", Namespace="http://schemas.datacontract.org/2004/07/Hospital.Models")]
    [System.SerializableAttribute()]
    public partial class HospitalModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HospitalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HospitalId {
            get {
                return this.HospitalIdField;
            }
            set {
                if ((this.HospitalIdField.Equals(value) != true)) {
                    this.HospitalIdField = value;
                    this.RaisePropertyChanged("HospitalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Doctor", Namespace="http://schemas.datacontract.org/2004/07/Hospital.Models")]
    [System.SerializableAttribute()]
    public partial class Doctor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DoctorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecializationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DoctorId {
            get {
                return this.DoctorIdField;
            }
            set {
                if ((this.DoctorIdField.Equals(value) != true)) {
                    this.DoctorIdField = value;
                    this.RaisePropertyChanged("DoctorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondName {
            get {
                return this.SecondNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondNameField, value) != true)) {
                    this.SecondNameField = value;
                    this.RaisePropertyChanged("SecondName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialization {
            get {
                return this.SpecializationField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecializationField, value) != true)) {
                    this.SpecializationField = value;
                    this.RaisePropertyChanged("Specialization");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="History", Namespace="http://schemas.datacontract.org/2004/07/Hospital.Models")]
    [System.SerializableAttribute()]
    public partial class History : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiagnoseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DoctorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HistoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HospitalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diagnose {
            get {
                return this.DiagnoseField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnoseField, value) != true)) {
                    this.DiagnoseField = value;
                    this.RaisePropertyChanged("Diagnose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DoctorId {
            get {
                return this.DoctorIdField;
            }
            set {
                if ((this.DoctorIdField.Equals(value) != true)) {
                    this.DoctorIdField = value;
                    this.RaisePropertyChanged("DoctorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HistoryId {
            get {
                return this.HistoryIdField;
            }
            set {
                if ((this.HistoryIdField.Equals(value) != true)) {
                    this.HistoryIdField = value;
                    this.RaisePropertyChanged("HistoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HospitalId {
            get {
                return this.HospitalIdField;
            }
            set {
                if ((this.HospitalIdField.Equals(value) != true)) {
                    this.HospitalIdField = value;
                    this.RaisePropertyChanged("HospitalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HospitalService.IHospitalService")]
    public interface IHospitalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getPatient", ReplyAction="http://tempuri.org/IHospitalService/getPatientResponse")]
        Personal.Health.Record.HospitalService.Patient[] getPatient(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getPatient", ReplyAction="http://tempuri.org/IHospitalService/getPatientResponse")]
        System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.Patient[]> getPatientAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getUserByUsernameAndPassword", ReplyAction="http://tempuri.org/IHospitalService/getUserByUsernameAndPasswordResponse")]
        Personal.Health.Record.HospitalService.Patient[] getUserByUsernameAndPassword(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getUserByUsernameAndPassword", ReplyAction="http://tempuri.org/IHospitalService/getUserByUsernameAndPasswordResponse")]
        System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.Patient[]> getUserByUsernameAndPasswordAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getUserByEGNAndPassword", ReplyAction="http://tempuri.org/IHospitalService/getUserByEGNAndPasswordResponse")]
        Personal.Health.Record.HospitalService.Patient[] getUserByEGNAndPassword(string egn, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getUserByEGNAndPassword", ReplyAction="http://tempuri.org/IHospitalService/getUserByEGNAndPasswordResponse")]
        System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.Patient[]> getUserByEGNAndPasswordAsync(string egn, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getHospital", ReplyAction="http://tempuri.org/IHospitalService/getHospitalResponse")]
        Personal.Health.Record.HospitalService.HospitalModel[] getHospital(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getHospital", ReplyAction="http://tempuri.org/IHospitalService/getHospitalResponse")]
        System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.HospitalModel[]> getHospitalAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getDoctor", ReplyAction="http://tempuri.org/IHospitalService/getDoctorResponse")]
        Personal.Health.Record.HospitalService.Doctor[] getDoctor(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getDoctor", ReplyAction="http://tempuri.org/IHospitalService/getDoctorResponse")]
        System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.Doctor[]> getDoctorAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/logonPatient", ReplyAction="http://tempuri.org/IHospitalService/logonPatientResponse")]
        string logonPatient(string patient_username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/logonPatient", ReplyAction="http://tempuri.org/IHospitalService/logonPatientResponse")]
        System.Threading.Tasks.Task<string> logonPatientAsync(string patient_username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getHospitalRecord", ReplyAction="http://tempuri.org/IHospitalService/getHospitalRecordResponse")]
        Personal.Health.Record.HospitalService.History[] getHospitalRecord(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getHospitalRecord", ReplyAction="http://tempuri.org/IHospitalService/getHospitalRecordResponse")]
        System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.History[]> getHospitalRecordAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getHospitalRecordByPatientID", ReplyAction="http://tempuri.org/IHospitalService/getHospitalRecordByPatientIDResponse")]
        Personal.Health.Record.HospitalService.History[] getHospitalRecordByPatientID(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getHospitalRecordByPatientID", ReplyAction="http://tempuri.org/IHospitalService/getHospitalRecordByPatientIDResponse")]
        System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.History[]> getHospitalRecordByPatientIDAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHospitalServiceChannel : Personal.Health.Record.HospitalService.IHospitalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HospitalServiceClient : System.ServiceModel.ClientBase<Personal.Health.Record.HospitalService.IHospitalService>, Personal.Health.Record.HospitalService.IHospitalService {
        
        public HospitalServiceClient() {
        }
        
        public HospitalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HospitalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HospitalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HospitalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Personal.Health.Record.HospitalService.Patient[] getPatient(string id) {
            return base.Channel.getPatient(id);
        }
        
        public System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.Patient[]> getPatientAsync(string id) {
            return base.Channel.getPatientAsync(id);
        }
        
        public Personal.Health.Record.HospitalService.Patient[] getUserByUsernameAndPassword(string username, string password) {
            return base.Channel.getUserByUsernameAndPassword(username, password);
        }
        
        public System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.Patient[]> getUserByUsernameAndPasswordAsync(string username, string password) {
            return base.Channel.getUserByUsernameAndPasswordAsync(username, password);
        }
        
        public Personal.Health.Record.HospitalService.Patient[] getUserByEGNAndPassword(string egn, string password) {
            return base.Channel.getUserByEGNAndPassword(egn, password);
        }
        
        public System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.Patient[]> getUserByEGNAndPasswordAsync(string egn, string password) {
            return base.Channel.getUserByEGNAndPasswordAsync(egn, password);
        }
        
        public Personal.Health.Record.HospitalService.HospitalModel[] getHospital(string id) {
            return base.Channel.getHospital(id);
        }
        
        public System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.HospitalModel[]> getHospitalAsync(string id) {
            return base.Channel.getHospitalAsync(id);
        }
        
        public Personal.Health.Record.HospitalService.Doctor[] getDoctor(string id) {
            return base.Channel.getDoctor(id);
        }
        
        public System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.Doctor[]> getDoctorAsync(string id) {
            return base.Channel.getDoctorAsync(id);
        }
        
        public string logonPatient(string patient_username) {
            return base.Channel.logonPatient(patient_username);
        }
        
        public System.Threading.Tasks.Task<string> logonPatientAsync(string patient_username) {
            return base.Channel.logonPatientAsync(patient_username);
        }
        
        public Personal.Health.Record.HospitalService.History[] getHospitalRecord(string id) {
            return base.Channel.getHospitalRecord(id);
        }
        
        public System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.History[]> getHospitalRecordAsync(string id) {
            return base.Channel.getHospitalRecordAsync(id);
        }
        
        public Personal.Health.Record.HospitalService.History[] getHospitalRecordByPatientID(string id) {
            return base.Channel.getHospitalRecordByPatientID(id);
        }
        
        public System.Threading.Tasks.Task<Personal.Health.Record.HospitalService.History[]> getHospitalRecordByPatientIDAsync(string id) {
            return base.Channel.getHospitalRecordByPatientIDAsync(id);
        }
    }
}
